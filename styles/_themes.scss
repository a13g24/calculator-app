// Partial: _themes.css
// Includes colors for different themes as well as mixins to construct css
// vars.


    // COLORS FOR THEMES

// Theme 1 - background
$t1-main-bg: hsl(222, 26%, 31%);
$t1-toggle-bg: hsl(223, 31%, 20%);
$t1-screen-bg: hsl(224, 36%, 15%);
// Theme 1 - keys
$t1-key-bg-a: hsl(225, 21%, 49%);
$t1-key-shadow-a: hsl(224, 28%, 35%);
$t1-key-bg-toggle: hsl(6, 63%, 50%);
$t1-key-shadow-b: hsl(6, 70%, 34%);
$t1-key-bg-b: hsl(30, 25%, 89%);
$t1-key-shadow-c: hsl(28, 16%, 65%);
// Theme 1 - text
$t1-text-highlights: hsl(221, 14%, 31%);
$t1-text-dark: hsl(0, 0%, 100%);
// $t1-text-highlights: hsl(0, 0%, 100%);
// $t1-text-dark: hsl(221, 14%, 31%);

// Theme 2 - background
$t2-main-bg: hsl(0, 0%, 90%);
$t2-toggle-bg: hsl(0, 5%, 81%);
$t2-screen-bg: hsl(0, 0%, 93%);
// Theme 2 - keys
$t2-key-bg-a: hsl(185, 42%, 37%);
$t2-key-shadow-a: hsl(185, 58%, 25%);
$t2-key-bg-toggle: hsl(25, 98%, 40%);
$t2-key-shadow-b: hsl(25, 99%, 27%);
$t2-key-bg-b: hsl(45, 7%, 89%);
$t2-key-shadow-c: hsl(35, 11%, 61%);
// Theme 2 - text
$t2-text-highlights: hsl(60, 10%, 19%);
$t2-text-dark: hsl(0, 0%, 100%);


// Theme 3 - background
$t3-main-bg: hsl(268, 75%, 9%);
$t3-toggle-bg: hsl(268, 71%, 12%);
$t3-screen-bg: hsl(268, 71%, 12%); // not specified in spec; leaving same as t2
// Theme 3 - keys
$t3-key-bg-a: hsl(281, 89%, 26%);
$t3-key-shadow-a: hsl(285, 91%, 52%);
$t3-key-bg-toggle: hsl(176, 100%, 44%);
$t3-key-shadow-b: hsl(177, 92%, 70%);
$t3-key-bg-b: hsl(268, 47%, 21%);
$t3-key-shadow-c: hsl(290, 70%, 36%);
// Theme 3 - text
$t3-text-highlights: hsl(52, 100%, 62%);
$t3-text-dark: hsl(198, 20%, 13%);
// there was an extra one in spec: white(text): hsl(0, 0%, 100%); I can't use it since it breaks the mixins
$t3-extra-white-text: hsl(0, 0%, 100%); // inserted the extra one here 


    // MIXINS FOR THEMES

// Property names (separating for later use in __base.scss). To be used w var()
// on relevant properties in _base.css.
$main-bg-name: --main-bg;
$toggle-bg-name: --toggle-bg;
$screen-bg-name: --screen-bg;
$key-bg-a-name: --key-bg-a;
$key-shadow-a-name: --key-shadow-a;
$key-bg-toggle-name: --key-bg-toggle;
$key-shadow-b-name: --key-shadow-b;
$key-bg-b-name: --key-bg-b;
$key-shadow-c-name: --key-shadow-c;
$text-highlights-name: --text-highlights;
$text-dark-name: --text-dark;

// Generates color vars for backgrounds
@mixin theme-background($main-bg, $toggle-bg, $screen-bg) {
    #{$main-bg-name}: #{$main-bg};
    #{$toggle-bg-name}: #{$toggle-bg};
    #{$screen-bg-name}: #{$screen-bg};
}


// Generates color vars for keys
@mixin theme-keys($key-bg-a, $key-shadow-a, $key-bg-toggle, $key-shadow-b, $key-bg-b, $key-shadow-c) {
    #{$key-bg-a-name}: #{$key-bg-a};
    #{$key-shadow-a-name}: #{$key-shadow-a};
    #{$key-bg-toggle-name}: #{$key-bg-toggle};
    #{$key-shadow-b-name}: #{$key-shadow-b};
    #{$key-bg-b-name}: #{$key-bg-b};
    #{$key-shadow-c-name}: #{$key-shadow-c};
}

// Generates color vars for text
@mixin theme-text($text-highlights, $text-dark) {
    #{$text-highlights-name}: #{$text-highlights};
    #{$text-dark-name}: #{$text-dark};
}

// Abandoned this idea. It ends up being more code to write in _base.scss my @including it
// just to make a single property.
// @mixin use-color-on-prop($property, $color) {
//     #{$property}: var($color);
// }